Java API:

Queue<> q = new LinkedList<>();
q.offer();
q.poll();
q.isEmpty();
本质是一样的，add(E) might throw an exception while offer(E) will simply return false.

max = (a > b) ? a : b;

treemap本来就是按照key排序好的


private Comparator<Pair> pairComparator = new Comparator<Pair>() {
    public int compare(Pair left, Pair right) {
        if (left.value != right.value) {
            return left.value - right.value;
        }
        return right.key.compareTo(left.key);
    }
};

Queue<Integer> q = new PriorityQueue<Integer>(k,pairComparator);//建k大小的堆
list.get(rnd.nextInt(list.size()));

StringBuilder.insert(pos,value)
StringBuilder.append(value)
StringBuilder.length()
StringBuilder.deleteCharAt(tempRes.length() -1 );

ArrayList.add(pos,value);
ArrayList.remove(value);
ArrayList.set(index, val);
Collections.reverse(res);

map.values()
map.keySet()

int forwardSlashIndex = s.indexOf('/', index);
s = s.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();

Cast:
String to Integer: Integer.parseInt(s)
Char to Int:  Character.getNumericValue(c)
a-z字符转数组 s.charAt(i) - 'a'

注意这里是double,否则除出来是整数